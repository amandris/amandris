package com.amandris.clients.web.action.common;import java.util.Locale;import javax.servlet.http.HttpServletRequest;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import org.apache.struts.action.Action;import org.apache.struts.action.ActionError;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import com.amandris.clients.util.Constant;abstract public class AbstractAction extends Action {	public 		Log 			log 	= LogFactory.getLog( this.getClass());	protected 	ActionErrors 	Errors	= new ActionErrors();    	protected Locale getRequestLocale(HttpServletRequest request)	{		String lenguaje = "";		Locale locale = getLocale(request);				try {			lenguaje = request.getParameter( "lang");		} catch ( Exception e) {			lenguaje = "es";		}				if ( lenguaje != null) {			locale = new Locale( lenguaje.toUpperCase());		}		setLocale( request,locale);				return locale;	}			protected ActionForward error( String message, HttpServletRequest request, ActionMapping mapping)	{		return error( message, null, null,  Constant.FAIL, request, mapping);	}		protected ActionForward error( String message, String parameter1, HttpServletRequest request, ActionMapping mapping)	{		return error( message, parameter1, null, Constant.FAIL, request, mapping);	}		protected ActionForward error( String message, String parameter1, String parameter2, HttpServletRequest request, ActionMapping mapping)	{		return error( message, parameter1, parameter2, Constant.FAIL, request, mapping);	}		protected ActionForward error( String message, String parameter1, String parameter2, String forward, HttpServletRequest request, ActionMapping mapping)	{		Errors.clear();		Errors.add( message, new ActionError( message, parameter1, parameter2));		saveErrors( request, Errors);		return ( mapping.findForward( forward));	}			}