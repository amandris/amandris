package com.amandris.clients.util.translator;import com.amandris.clients.service.vo.SellerService;import com.amandris.clients.util.ConfigurationParameterManager;import com.amandris.clients.util.DBUtils;import com.amandris.clients.util.exception.TranslateValueObjectErrorException;import com.amandris.clients.web.view.ServiceView;public class SellerServiceToServiceViewTranslator extends Translator {	public Object translateView() throws TranslateValueObjectErrorException	{		ServiceView 	serviceView 	= new ServiceView();		SellerService	sellerService	= ( SellerService) object;				try{			serviceView.setId								( DBUtils.controlNull( sellerService.getId()));			serviceView.setCurrencyConst					( DBUtils.controlNull( sellerService.getCurrencyConst()));			serviceView.setCurrencyText						( ConfigurationParameterManager.getMessages().getMessage( locale, "currency." + DBUtils.controlNull( sellerService.getCurrencyConst())));			serviceView.setSellerId							( DBUtils.controlNull( sellerService.getSellerId()));			serviceView.setServiceAdditionalHoursPrice		( DBUtils.controlNull( sellerService.getServiceAdditionalHoursPrice()));			serviceView.setServiceAdditionalHoursPriceDouble( sellerService.getServiceAdditionalHoursPrice());			serviceView.setServiceFirstHourPrice			( DBUtils.controlNull( sellerService.getServiceFirstHourPrice()));			serviceView.setServiceFirstHourPriceDouble		( sellerService.getServiceFirstHourPrice());			serviceView.setServiceTypeConst					( DBUtils.controlNull( sellerService.getServiceTypeConst()));			serviceView.setServiceTypeText					( ConfigurationParameterManager.getMessages().getMessage( locale, "service." + DBUtils.controlNull( sellerService.getServiceTypeConst())));			serviceView.setSexConst							( DBUtils.controlNull( sellerService.getSexConst()));					}catch( Exception e) {			throw new TranslateValueObjectErrorException( object.getClass().getName(), serviceView.getClass().getName(), e);		}				return serviceView;	}}