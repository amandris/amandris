package com.amandris.clients.util.translator;import java.util.Calendar;import com.amandris.clients.service.vo.Seller;import com.amandris.clients.util.ConfigurationParameterManager;import com.amandris.clients.util.DBUtils;import com.amandris.clients.util.exception.TranslateValueObjectErrorException;import com.amandris.clients.web.view.SellerViewList;public class SellerToSellerViewListTranslator extends Translator {	public Object translateView() throws TranslateValueObjectErrorException	{		SellerViewList 	sellerViewList 		= new SellerViewList();		Seller			seller				= ( Seller) object;		int				pictureCount		= 0;		String			language			= "";				try{			if( seller.getTextActive().intValue() == 1) {				sellerViewList.setCity						( DBUtils.controlNull( seller.getCity()));				sellerViewList.setBriefCity					( DBUtils.briefString( seller.getCity(), 14));				sellerViewList.setIntro						( DBUtils.controlNull( seller.getIntro()));				sellerViewList.setBriefIntro				( DBUtils.briefString( seller.getIntro(), 23));				sellerViewList.setText						( DBUtils.controlNull( seller.getText()));				sellerViewList.setBriefText					( DBUtils.briefString( seller.getText(), 100));							} else {				sellerViewList.setCity						( ConfigurationParameterManager.getMessages().getMessage( locale, "common.waitingForRevision"));				sellerViewList.setBriefCity					( ConfigurationParameterManager.getMessages().getMessage( locale, "common.briefWaitingForRevision"));				sellerViewList.setIntro						( ConfigurationParameterManager.getMessages().getMessage( locale, "common.waitingForRevision"));				sellerViewList.setBriefIntro				( ConfigurationParameterManager.getMessages().getMessage( locale, "common.briefWaitingForRevision"));				sellerViewList.setText						( ConfigurationParameterManager.getMessages().getMessage( locale, "common.waitingForRevision"));				sellerViewList.setBriefText					( ConfigurationParameterManager.getMessages().getMessage( locale, "common.briefWaitingForRevision"));			}							sellerViewList.setId						( DBUtils.controlNull( seller.getId()));			sellerViewList.setAge						( Integer.toString( DBUtils.getAge( seller.getBirthdate(), locale)));			sellerViewList.setContactsAccepted			( DBUtils.controlNull( seller.getContactsAccepted()));			sellerViewList.setContactsNotReplied		( DBUtils.controlNull( seller.getContactsNotReplied()));			sellerViewList.setContactsReceived			( DBUtils.controlNull( seller.getContactsReceived()));			sellerViewList.setContactsRejected			( DBUtils.controlNull( seller.getContactsRejected()));			sellerViewList.setCountry					( ConfigurationParameterManager.getMessages().getMessage( locale, "country." + DBUtils.controlNull( seller.getCountry().getText())));			sellerViewList.setCountryId					( seller.getCountryId());			sellerViewList.setDatesCanceled 			( DBUtils.controlNull( seller.getDatesCanceled()));			sellerViewList.setHasPicture				( DBUtils.controlNull( seller.getHasPicture()));			sellerViewList.setLogin						( DBUtils.controlNull( seller.getLogin()));			sellerViewList.setBriefLogin				( DBUtils.briefString( seller.getLogin(), 15));						sellerViewList.setNegativeVotes				( DBUtils.controlNull( seller.getNegativeVotes()));			sellerViewList.setMainPicture				( DBUtils.controlNull( seller.getMainPicture()));			sellerViewList.setMainPictureCode			( DBUtils.controlNull( seller.getMainPictureCode()));			sellerViewList.setPositiveVotes				( DBUtils.controlNull( seller.getPositiveVotes()));			sellerViewList.setSex						( ConfigurationParameterManager.getMessages().getMessage( locale, "sex." + DBUtils.controlNull( seller.getSexConst())));			sellerViewList.setSexId						( DBUtils.controlNull( seller.getSexConst()));			sellerViewList.setState						( ConfigurationParameterManager.getMessages().getMessage( locale, "state." + DBUtils.controlNull( seller.getState().getText())));			sellerViewList.setStateId					( seller.getStateId());			sellerViewList.setHighlighted				( "1");			sellerViewList.setIsEscort					( DBUtils.controlNull( seller.getIsEscort()));							if( seller.getContactsReceived().intValue() == 0)				sellerViewList.setContactsAcceptedPercentage( "0");			else				sellerViewList.setContactsAcceptedPercentage( DBUtils.controlNull( new Double( ((double) seller.getContactsAccepted().intValue() / ( double) seller.getContactsReceived().intValue()) * 100), 0));						if( seller.getFreeContactsUntil() != null) {				if( seller.getFreeContactsUntil().after( Calendar.getInstance( locale).getTime()))					sellerViewList.setFreeContacts( "1");				else					sellerViewList.setFreeContacts( "0");			} else 				sellerViewList.setFreeContacts( "0");						if( seller.getFirstPlaceInSearchUntil() != null) {				if( seller.getFirstPlaceInSearchUntil().after( Calendar.getInstance( locale).getTime()))					sellerViewList.setFirstPlaceInSearch( "1");				else					sellerViewList.setFirstPlaceInSearch( "0");			} else 				sellerViewList.setFirstPlaceInSearch( "0");					}catch( Exception e) {			e.printStackTrace();			throw new TranslateValueObjectErrorException( object.getClass().getName(), sellerViewList.getClass().getName(), e);		}				return sellerViewList;	}}