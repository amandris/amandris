package com.amandris.clients.service.facade;import java.util.ArrayList;import java.util.Collection;import java.util.Iterator;import java.util.Locale;import com.amandris.clients.service.dao.BuyerDAO;import com.amandris.clients.service.dao.SavedSearchDAO;import com.amandris.clients.service.dao.UtilDAO;import com.amandris.clients.service.vo.Buyer;import com.amandris.clients.service.vo.BuyerSavedSearch;import com.amandris.clients.service.vo.Country;import com.amandris.clients.service.vo.State;import com.amandris.clients.util.DBUtils;import com.amandris.clients.util.exception.DataAccessErrorException;import com.amandris.clients.util.exception.DataDeleteErrorException;import com.amandris.clients.util.exception.DataUpdateErrorException;import com.amandris.clients.util.exception.TranslateValueObjectErrorException;import com.amandris.clients.util.translator.TranslatorFactory;import com.amandris.clients.web.form.BuyerSellerSearchForm;import com.amandris.clients.web.view.IdTextView;public class SavedSearchFacade {		public void setSavedSearch( Integer buyerId, BuyerSellerSearchForm form, Locale locale) throws DataUpdateErrorException, DataAccessErrorException, TranslateValueObjectErrorException	{				SavedSearchDAO		savedSearchDAO 		= new SavedSearchDAO();		BuyerDAO			buyerDAO			= new BuyerDAO();		UtilDAO				utilDAO				= new UtilDAO();		BuyerSavedSearch 	savedSearch			= null;		Integer				id					= null;		Buyer				buyer				= null;		State				state				= null;		Country				country				= null;		savedSearch = savedSearchDAO.getSavedSearchByBuyerIdAndName( buyerId, form.getSaveSearchName());				if( savedSearch != null) {			id = savedSearch.getId();		}				savedSearch = ( BuyerSavedSearch) TranslatorFactory.getTranslator( form, locale).translateView();				if( id != null)			savedSearch.setId( id);				buyer 	= buyerDAO.getBuyerById( buyerId, null);		state 	= utilDAO.getStateById( form.getState());		country	= utilDAO.getCountryById( form.getCountry());								savedSearch.setBuyerId( buyerId);		savedSearch.setBuyer( buyer);		savedSearch.setStateId( state.getId());		savedSearch.setState( state);		savedSearch.setCountryId( country.getId());		savedSearch.setCountry( country);				savedSearchDAO.setSavedSearch( savedSearch);	}		public void deleteSavedSearch( Integer id) throws DataDeleteErrorException, DataAccessErrorException	{				SavedSearchDAO savedSearchDAO = new SavedSearchDAO();		savedSearchDAO.deleteSavedSearch( id);	}		public BuyerSellerSearchForm getSavedSearchById(Integer id, Locale locale) throws DataAccessErrorException, TranslateValueObjectErrorException	{		SavedSearchDAO 		savedSearchDAO 		= new SavedSearchDAO();		BuyerSavedSearch 	savedSearch			= null;		Iterator			iterator			= null;		BuyerSavedSearch	buyerSavedSearch	= null;				buyerSavedSearch = savedSearchDAO.getSavedSearchById( id);				if( buyerSavedSearch == null)			return null;				return ( BuyerSellerSearchForm) TranslatorFactory.getTranslator( buyerSavedSearch, locale).translateView();	}					public Collection getSavedSearch(Integer buyerId) throws DataAccessErrorException, TranslateValueObjectErrorException	{		SavedSearchDAO 	savedSearchDAO 	= new SavedSearchDAO();		Collection 			collection 	= null;		ArrayList 			result		= new ArrayList();		BuyerSavedSearch 	savedSearch	= null;		Iterator			iterator	= null;		IdTextView			idTextView	= null;				collection = savedSearchDAO.getSavedSearch( buyerId);				if( collection == null)			return null;				iterator = collection.iterator();		while( iterator.hasNext()){			savedSearch = ( BuyerSavedSearch) iterator.next();			idTextView = new IdTextView();						idTextView.setId( DBUtils.controlNull( savedSearch.getId()));			idTextView.setText( DBUtils.briefString( savedSearch.getName(), 15));						result.add( idTextView);		}				return result;	}	}