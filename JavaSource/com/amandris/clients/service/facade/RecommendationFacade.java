package com.amandris.clients.service.facade;import java.util.Date;import java.util.GregorianCalendar;import java.util.Locale;import com.amandris.clients.service.dao.BuyerDAO;import com.amandris.clients.service.dao.RecommendationDAO;import com.amandris.clients.service.dao.SellerDAO;import com.amandris.clients.service.vo.Buyer;import com.amandris.clients.service.vo.BuyerRecomendation;import com.amandris.clients.service.vo.Seller;import com.amandris.clients.service.vo.SellerRecomendation;import com.amandris.clients.util.exception.DataAccessErrorException;import com.amandris.clients.util.exception.DataUpdateErrorException;public class RecommendationFacade {		public boolean setBuyerRecommendation( String email, String mesage, Integer buyerId, Locale locale) throws DataAccessErrorException, DataUpdateErrorException	{		BuyerDAO			buyerDAO			= new BuyerDAO();		RecommendationDAO	recommendationDAO	= new RecommendationDAO();		Buyer				buyer				= null;		BuyerRecomendation	buyerRecomendation	= new BuyerRecomendation();		Date				today 				= GregorianCalendar.getInstance( locale).getTime();				buyer = buyerDAO.getBuyerById( buyerId, null);				if( buyer == null)			return false;				if( recommendationDAO.getBuyerRecommendationByBuyerIdAndEmail( buyerId, email) != null)			return true;				buyerRecomendation.setBuyer		( buyer);		buyerRecomendation.setBuyerId	( buyer.getId());		buyerRecomendation.setEmail		( email);		buyerRecomendation.setDate		( today);		buyerRecomendation.setUsed		( new Integer( 0));				recommendationDAO.setBuyerRecommendation( buyerRecomendation);				return true;	}		public boolean setSellerRecommendation( String email, String mesage, Integer sellerId, Locale locale) throws DataAccessErrorException, DataUpdateErrorException	{		SellerDAO			sellerDAO			= new SellerDAO();		RecommendationDAO	recommendationDAO	= new RecommendationDAO();		Seller				seller				= null;		SellerRecomendation	sellerRecomendation	= new SellerRecomendation();		Date				today 				= GregorianCalendar.getInstance( locale).getTime();				seller = sellerDAO.getSellerById( sellerId);				if( seller == null)			return false;				if( recommendationDAO.getSellerRecommendationBySellerIdAndEmail( sellerId, email) != null)			return true;				sellerRecomendation.setSeller	( seller);		sellerRecomendation.setSellerId	( seller.getId());		sellerRecomendation.setEmail	( email);		sellerRecomendation.setDate		( today);		sellerRecomendation.setUsed		( new Integer( 0));				recommendationDAO.setSellerRecommendation( sellerRecomendation);				return true;	}	}