package com.amandris.clients.service.facade;import java.util.ArrayList;import java.util.Calendar;import java.util.Collection;import java.util.Iterator;import java.util.Locale;import com.amandris.clients.service.dao.AmandrisMessageDAO;import com.amandris.clients.service.vo.AmandrisMessage;import com.amandris.clients.util.exception.DataAccessErrorException;import com.amandris.clients.util.exception.DataDeleteErrorException;import com.amandris.clients.util.exception.DataUpdateErrorException;import com.amandris.clients.util.exception.TranslateValueObjectErrorException;import com.amandris.clients.util.translator.TranslatorFactory;import com.amandris.clients.web.view.AmandrisMessageView;public class AmandrisMessageFacade {		public boolean setAmandrisMessage( Integer userId, int userType, String email, String subject, String text, Locale locale) throws DataAccessErrorException, DataUpdateErrorException	{		AmandrisMessageDAO 	amandrisMessageDAO 	= new AmandrisMessageDAO();		AmandrisMessage 	amandrisMessage 	= new AmandrisMessage();		Calendar			today				= Calendar.getInstance( locale);							amandrisMessage.setUserId	( userId);		amandrisMessage.setEmail	( email);		amandrisMessage.setIsNew	( new Integer( 1));		amandrisMessage.setSubject	( subject);		amandrisMessage.setText		( text);		amandrisMessage.setUserType	( new Integer( userType));		amandrisMessage.setDate		( today.getTime());				amandrisMessageDAO.setAmandrisMessage( amandrisMessage);						return true;	}		public boolean setAmandrisMessageReadById( Integer id) throws DataAccessErrorException, DataUpdateErrorException	{		AmandrisMessageDAO 	amandrisMessageDAO 	= new AmandrisMessageDAO();		AmandrisMessage 	amandrisMessage 	= new AmandrisMessage();							amandrisMessage = amandrisMessageDAO.getAmandrisMessageById( id);				if( amandrisMessage == null)			return false;						amandrisMessage.setIsNew( new Integer( 0));				amandrisMessageDAO.setAmandrisMessage( amandrisMessage);						return true;	}		public boolean deleteAmandrisMessageById( Integer id, Locale locale) throws DataAccessErrorException, TranslateValueObjectErrorException, DataDeleteErrorException	{		AmandrisMessageDAO 	amandrisMessageDAO 	= new AmandrisMessageDAO();		AmandrisMessage		amandrisMessage		= null;		AmandrisMessageView	amandrisMessageView	= null;				amandrisMessage = amandrisMessageDAO.getAmandrisMessageById( id);				if( amandrisMessage == null)			return false;						amandrisMessageDAO.deleteAmandrisMessage( amandrisMessage);				return true;	}			public AmandrisMessageView getAmandrisMessageById( Integer id, Locale locale) throws DataAccessErrorException, TranslateValueObjectErrorException	{		AmandrisMessageDAO 	amandrisMessageDAO 	= new AmandrisMessageDAO();		AmandrisMessage		amandrisMessage		= null;		AmandrisMessageView	amandrisMessageView	= null;				amandrisMessage = amandrisMessageDAO.getAmandrisMessageById( id);				if( amandrisMessage == null)			return null;				amandrisMessageView = ( AmandrisMessageView) TranslatorFactory.getTranslator( amandrisMessage, locale).translateView();						return amandrisMessageView;	}			public Collection getAmandrisMessage( Locale locale, Boolean onlyNew) throws DataAccessErrorException, TranslateValueObjectErrorException	{		AmandrisMessageDAO 		amandrisMessageDAO	 		= new AmandrisMessageDAO();		Collection 				collection 					= null;		AmandrisMessage			amandrisMessage				= null;		Iterator				iterator					= null;		ArrayList				list						= new ArrayList();		AmandrisMessageView		amandrisMessageView			= null;				collection = amandrisMessageDAO.getAmandrisMessage( onlyNew);		if( collection == null)			return null;				iterator = collection.iterator();				while( iterator.hasNext()){			amandrisMessage = ( AmandrisMessage) iterator.next();						amandrisMessageView = ( AmandrisMessageView) TranslatorFactory.getTranslator( amandrisMessage, locale).translateView();									list.add( amandrisMessageView);		}						return list;	}}