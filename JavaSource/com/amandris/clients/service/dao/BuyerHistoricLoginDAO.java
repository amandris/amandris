package com.amandris.clients.service.dao;import org.apache.ojb.broker.PersistenceBroker;import org.apache.ojb.broker.PersistenceBrokerException;import org.apache.ojb.broker.PersistenceBrokerFactory;import org.apache.ojb.broker.query.Criteria;import org.apache.ojb.broker.query.QueryByCriteria;import com.amandris.clients.service.vo.BuyerHistoricLogin;import com.amandris.clients.util.exception.DataDeleteErrorException;import com.amandris.clients.util.exception.DataUpdateErrorException;public class BuyerHistoricLoginDAO{				public void setBuyerHistoricLogin( BuyerHistoricLogin buyerHistoricLogin)  throws DataUpdateErrorException{		PersistenceBroker broker = null;			try{			broker = PersistenceBrokerFactory.defaultPersistenceBroker();			broker.beginTransaction();			broker.store( buyerHistoricLogin);			broker.commitTransaction();		}catch (PersistenceBrokerException ex){			broker.abortTransaction();			throw new DataUpdateErrorException( BuyerHistoricLogin.class.getName(), this.getClass().getName() + ".setBuyerHistoricLogin()", ex);		}finally {			if (broker != null) {				broker.close();			}		}	}			public void deleteBuyerHistoricLoginByBuyerId( Integer buyerId) throws DataDeleteErrorException	{		Criteria 			criteria	= new Criteria();		PersistenceBroker 	broker 		= null;				try {			criteria.addNotEqualTo	( "id", new Integer( 0));			criteria.addEqualTo		( "buyerId", buyerId);									QueryByCriteria query = new QueryByCriteria( BuyerHistoricLogin.class, criteria);									broker = PersistenceBrokerFactory.defaultPersistenceBroker();				broker.deleteByQuery( query);					}catch ( PersistenceBrokerException ex) {			throw new DataDeleteErrorException( BuyerHistoricLogin.class.getName(), this.getClass().getName() + ".deleteBuyerHistoricLoginByBuyerId()", ex);		}finally {			if ( broker != null) {				broker.close();			}		}	}	}